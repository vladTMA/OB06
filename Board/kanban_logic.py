# kanban_logic.py

# –õ–æ–≥–∏–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ Kanban-–¥–æ—Å–∫–∏:
# –°–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞, —É–¥–∞–ª–µ–Ω–∏—è –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∑–∞–¥–∞—á
from datetime import datetime


# –•—Ä–∞–Ω–∏–ª–∏—â–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á –∏ —Å—á—ë—Ç—á–∏–∫ ID
tasks_data = []
task_counter = 1


# –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
def add_task(text: str):
    global task_counter
    if text.strip():
        number = f"{task_counter:02d}" # –§–æ—Ä–º–∏—Ä—É–µ–º ID —Å –≤–µ–¥—É—â–∏–º–∏ –Ω—É–ª—è–º–∏
        task ={
            "id": number,
            "text": text.strip(),
            "status": "new", # –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
            "timestamp": None # –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—è–≤–∏—Ç—Å—è –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç–∞—Ç—É—Å–∞
        }
        tasks_data.append(task)
        task_counter += 1
        return task
    return None


# –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –∏ –ø—Ä–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏
def change_status(task_id: str, new_status: str):
    for task in tasks_data:
        if task["id"] == task_id:
            task["status"] = new_status
            task["timestamp"] = datetime.now().strftime("%d. %m.%Y %H:%M")
            return task
    return None


# –£–¥–∞–ª—è–µ—Ç –∑–∞–¥–∞—á—É –ø–æ –µ—ë ID
def delete_task(task_id: str):
    global tasks_data
    tasks_data[:] = [t for t in tasks_data if t["id"] !=task_id]


# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è txt —Ñ–∞–π–ª–∞
COLUMN_TITLES_RU = {
    "new": "–ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏",
    "executing": "–í —Ä–∞–±–æ—Ç–µ",
    "testing": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "done": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏–π —Å—Ç–∞–¥–∏–π –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
COLUMN_TITLES_RU = {
    "new": "–ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏",
    "executing": "–í —Ä–∞–±–æ—Ç–µ",
    "testing": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
    "done": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
}

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∑–∞–¥–∞—á–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å—Ä–æ–∫–∞–º–∏
def export_tasks_to_file(
    filename: str = "kanban_export.txt",
    project_name: str = "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è",
    deadline_from: str = "",
    deadline_to: str = ""
):
    with open(filename, "w", encoding="utf-8") as f:
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —Å—Ä–æ–∫
        f.write(f"üìå –ü—Ä–æ–µ–∫—Ç: {project_name}\n")
        f.write(f"üóì –°—Ä–æ–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: —Å {deadline_from} –ø–æ {deadline_to}\n\n")

        # –ó–∞–¥–∞—á–∏ –ø–æ —Å—Ç–∞–¥–∏—è–º
        stages = ["new", "executing", "testing", "done"]
        for stage in stages:
            title_ru = COLUMN_TITLES_RU.get(stage, f"–°—Ç–∞–¥–∏—è: {stage}")
            f.write(f"{'=' * 10} {title_ru} {'=' * 10}\n")
            for task in tasks_data:
                if task["status"] == stage:
                    line = f"{task['id']}. {task['text']} ({task['timestamp']})\n"
                    f.write(line)
            f.write("\n")

    print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω: {filename} ({len(tasks_data)} –∑–∞–¥–∞—á)")








